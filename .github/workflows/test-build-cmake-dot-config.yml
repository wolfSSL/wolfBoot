name: wolfboot CMake (.config)
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
jobs:
  wolfboot_dot_config_test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Workaround for sources.list
        run: |
            # Replace sources

            set -euxo pipefail

            # Peek (what repos are active now)
            apt-cache policy
            grep -RInE '^(deb|Types|URIs)' /etc/apt || true

            # Enable nullglob so *.list/*.sources that don't exist don't break sed
            shopt -s nullglob

            echo "Replace sources.list (legacy)"
            sudo sed -i \
              -e "s|https\?://azure\.archive\.ubuntu\.com/ubuntu/?|http://mirror.arizona.edu/ubuntu/|g" \
              /etc/apt/sources.list || true

            echo "Replace sources.list.d/*.list (legacy)"
            for f in /etc/apt/sources.list.d/*.list; do
              sudo sed -i \
                -e "s|https\?://azure\.archive\.ubuntu\.com/ubuntu/?|http://mirror.arizona.edu/ubuntu/|g" \
                "$f"
            done

            echo "Replace sources.list.d/*.sources (deb822)"
            for f in /etc/apt/sources.list.d/*.sources; do
              sudo sed -i \
                -e "s|https\?://azure\.archive\.ubuntu\.com/ubuntu/?|http://mirror.arizona.edu/ubuntu/|g" \
                -e "s|https\?://azure\.archive\.ubuntu\.com|http://mirror.arizona.edu|g" \
                "$f"
            done

            echo "Fix /etc/apt/apt-mirrors.txt (used by URIs: mirror+file:...)"
            if grep -qE '^[[:space:]]*https?://azure\.archive\.ubuntu\.com/ubuntu/?' /etc/apt/apt-mirrors.txt; then
              # Replace azure with our mirror (idempotent)
              sudo sed -i 's|https\?://azure\.archive\.ubuntu\.com/ubuntu/|http://mirror.arizona.edu/ubuntu/|g' /etc/apt/apt-mirrors.txt
            fi

            # Peek (verify changes)
            grep -RIn "azure.archive.ubuntu.com" /etc/apt || true
            grep -RInE '^(deb|Types|URIs)' /etc/apt || true
            echo "--- apt-mirrors.txt ---"
            cat /etc/apt/apt-mirrors.txt || true


      - name: Install requirements
        run: |
            # Run system updates and install toolchain
            sudo apt-get update
            sudo apt-get install -y gcc-arm-none-eabi gcc-powerpc-linux-gnu cmake

      - name: Run dot-config examples
        run: |
            # Sample .config cmake test

            set -euo pipefail

            LOG_FILE="run.log"
            KEYWORD="Config mode: dot"
            echo "Saving output to $LOG_FILE"

            echo "Fetch stm32h7 example .config"
            cp   ./config/examples/stm32h7.config ./.config
            ls   .config
            cat  .config
            echo ""

            echo "Clean"
            rm -rf ./build-stm32h7

            # Here we should see the .config file values read and displayed:
            cmake -S . -B build-stm32h7 \
              -DUSE_DOT_CONFIG=ON       \
              -DWOLFBOOT_TARGET=stm32h7 2>&1 | tee "$LOG_FILE"

            # Config dot-config mode
            if grep -q -- "$KEYWORD" "$LOG_FILE"; then
                echo "Keyword found: $KEYWORD"
            else
                echo "Keyword not found: $KEYWORD" >&2
                exit 1
            fi

            # Sample build
            cmake --build build-stm32h7 -j
