name: Wolfboot CMake Build
on:
  pull_request:
    branches: [ '*' ]
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      mirror_cmd: sudo sed -i 's|http://azure.archive.ubuntu.com/ubuntu/|http://mirror.arizona.edu/ubuntu/|g' /etc/apt/sources.list
    steps:
      - run: echo "Setting up common environment variables"

  cmake_stm32u5_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi gcc-powerpc-linux-gnu cmake

      - name: Run CMake - STM32U5
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=stm32u5 -DBUILD_TEST_APPS=yes -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x08100000 -DWOLFBOOT_SECTOR_SIZE=0x2000 -DWOLFBOOT_PARTITION_SIZE=0x20000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x817F000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x81FE000 -DNO_MPU=yes
      - name: Build wolfBoot - STM32U5
        run: make -C build

  cmake_stm32f4_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Run CMake - STM32F4
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=stm32f4 -DBUILD_TEST_APPS=yes -DWOLFBOOT_PARTITION_SIZE=0x20000 -DWOLFBOOT_SECTOR_SIZE=0x20000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x08020000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x08040000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x08060000
      - name: Build wolfBoot - STM32F4
        run: make -C build

  cmake_stm32f7_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Run CMake - STM32F7
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=stm32f7 -DBUILD_TEST_APPS=yes -DWOLFBOOT_PARTITION_SIZE=0x20000 -DWOLFBOOT_SECTOR_SIZE=0x20000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x08020000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x08040000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x08060000
      - name: Build wolfBoot - STM32F7
        run: make -C build

  cmake_simulator_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Run CMake - Simulator
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=sim -DBUILD_TEST_APPS=yes -DWOLFBOOT_PARTITION_SIZE=0x20000 -DWOLFBOOT_SECTOR_SIZE=0x1000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x0 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x20000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x40000
      - name: Build wolfBoot - Simulator
        run: make -C build

  cmake_stm32h5_tz_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Run CMake - STM32H5 with TrustZone
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=stm32h5 -DTZEN=yes -DWOLFCRYPT_TZ=yes -DWOLFCRYPT_TZ_PKCS11=yes -DWOLFBOOT_PARTITION_SIZE=0xC0000 -DWOLFBOOT_SECTOR_SIZE=0x2000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x08040000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x8140000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x08010000 -DNO_MPU=yes
      - name: Build wolfBoot - STM32H5 with TrustZone
        run: make -C build

  cmake_nrf52_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Run CMake - NRF52
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=nrf52 -DBUILD_TEST_APPS=yes -DWOLFBOOT_PARTITION_SIZE=0x8000 -DWOLFBOOT_SECTOR_SIZE=0x1000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x27000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x2F000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x37000
      - name: Build wolfBoot - NRF52
        run: make -C build

  cmake_mcxa_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Checkout MCUXpresso SDK
        uses: actions/checkout@main
        with:
          repository: nxp-mcuxpresso/mcux-sdk
          path: mcux-sdk

      - name: Run CMake - MCXA
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=mcxa -DMCUXSDK=1 -DMCUXPRESSO="$GITHUB_WORKSPACE/mcux-sdk" -DMCUXPRESSO_CPU=MCXA153 -DMCUXPRESSO_DRIVERS="$GITHUB_WORKSPACE/mcux-sdk/devices/MCXA153" -DWOLFBOOT_PARTITION_SIZE=0xB000 -DWOLFBOOT_SECTOR_SIZE=0x1000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x8000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x13000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x1E000
      - name: Build wolfBoot - MCXA
        run: make -C build

  cmake_imx_rt1060_test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install requirements
        run: |
          ${{ needs.setup.outputs.mirror_cmd }}
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Checkout MCUXpresso SDK
        uses: actions/checkout@main
        with:
          repository: nxp-mcuxpresso/mcux-sdk
          path: mcux-sdk

      - name: Checkout CMSIS
        uses: actions/checkout@main
        with:
          repository: nxp-mcuxpresso/CMSIS_5
          path: CMSIS_5

      - name: Run CMake - IMX-RT1060
        run: |
          rm -rf ./build
          cmake -B build -DWOLFBOOT_TARGET=imx_rt -DMCUXSDK=1 -DMCUXPRESSO="$GITHUB_WORKSPACE/mcux-sdk" -DMCUXPRESSO_CMSIS="$GITHUB_WORKSPACE/CMSIS_5/CMSIS" -DMCUXPRESSO_CPU=MIMXRT1062DVL6A -DMCUXPRESSO_DRIVERS="$GITHUB_WORKSPACE/mcux-sdk/devices/MIMXRT1062" -DWOLFBOOT_PARTITION_SIZE=0x20000 -DWOLFBOOT_SECTOR_SIZE=0x1000 -DWOLFBOOT_PARTITION_BOOT_ADDRESS=0x60010000 -DWOLFBOOT_PARTITION_UPDATE_ADDRESS=0x60030000 -DWOLFBOOT_PARTITION_SWAP_ADDRESS=0x60050000 -DNVM_FLASH_WRITEONCE=yes -DRAM_CODE=yes
      - name: Build wolfBoot - IMX-RT1060
        run: make -C build
